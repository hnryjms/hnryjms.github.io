/*
 * _layout.scss
 */

@import "fonts";
@import "../vendor/gridle/sass/gridle/gridle";

$font-family: "Montserrat", sans-serif;
$font-weight: 300;
$line-height: 180%;

$font-size-base: 18px;
$font-color: #666;
$link-color: $font-color;
$link-color-hover: #EB461D;

$font-size-h1: 180%;
$font-weight-h1: 400;
$font-size-h2: ($font-size-h1 - 23%);
$font-weight-h2: 400;
$font-size-h3: ($font-size-h2 - 23%);
$font-weight-h3: 400;
$font-size-h4: ($font-size-h3 - 23%);
$font-weight-h4: 400;
$font-size-h5: ($font-size-h4 - 13%);
$font-weight-h5: 400;
$font-size-h6: ($font-size-h5 - 13%);
$font-weight-h6: 400;

$background-light: lighten($font-color, 56%);

@include gridle_setup((
	context: 12,
	gutter-width : 0,
));

@include gridle_register_state(xs, (
	max-width: 480px
));
@include gridle_register_state(sm, (
	max-width: 768px
));
@include gridle_register_state(md, (
	max-width: 992px
));
@include gridle_register_state(lg, (
	max-width: 1200px
));

.respond {
	box-sizing: border-box;
	padding: 0 20px;
	margin: 0 auto;
	width: 100%;

	@media (min-width: _gridle_get_state_var(lg, "max-width")) {
		width: _gridle_get_state_var(lg, "max-width");
	}
	@media (min-width: _gridle_get_state_var(md, "max-width")+1px) and
			(max-width: _gridle_get_state_var(lg, "max-width")) {
		width: _gridle_get_state_var(md, "max-width");
	}
	@media (min-width: _gridle_get_state_var(sm, "max-width")+1px) and
			(max-width: _gridle_get_state_var(md, "max-width")) {
		width: _gridle_get_state_var(sm, "max-width");
	}
}

.respond-narrow {
	max-width: (_gridle_get_state_var(md, "max-width") + _gridle_get_state_var(sm, "max-width")) / 2.5;
	margin: 0 auto;
}

* {
	-webkit-text-size-adjust: 100%;
}

body {
	font-family: $font-family;
	font-weight: $font-weight;
	font-size: $font-size-base;
	line-height: $line-height;
	color: $font-color;

	@media (max-width: _gridle_get_state_var(xs, "max-width")) {
		font-size: $font-size-base - 2px;
	}
}

h1 {
	font-size: $font-size-h1;
	font-weight: $font-weight-h1;
	margin-bottom: 16px;
}

h2 {
	font-size: $font-size-h2;
	font-weight: $font-weight-h2;
	margin-bottom: 5px;
}

h3 {
	font-size: $font-size-h3;
	font-weight: $font-weight-h3;
	margin-bottom: 4px;
}

h4 {
	font-size: $font-size-h4;
	font-weight: $font-weight-h4;
	margin-bottom: 3px;
}

h5 {
	font-size: $font-size-h5;
	font-weight: $font-weight-h5;
	margin-bottom: 2px;
}

h6 {
	font-size: $font-size-h6;
	font-weight: $font-weight-h6;
	margin-bottom: 1px;
}

blockquote {
	margin: 18px 0 18px -15px;
	padding: 9px 0 0 20px;
	border-left: 5px solid lighten($font-color, 25%);

	p {
		&:last-child {
			margin-bottom: 0;
		}
	}
}

p {
	margin: 0 0 18px;
}

b {
	font-weight: 400;
}

big {
	font-weight: 400;
	color: darken($font-color, 20%);
}

address {
	margin: 9px 0;
	background-color: $background-light;
	padding: 20px;
	text-align: right;
}

ul, ol, menu {
	margin: 0 0 18px 43px;

	@media (max-width: _gridle_get_state_var(sm, "max-width")) {
		margin-left: 23px;
	}
}
ul, menu {
	list-style-type: square;
}
ol, dir {
	list-style-type: upper-roman;
}

pre {
	margin: 0 0 18px;
	font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
	line-height: 22px;
	font-size: $font-size-base * 0.814;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	background-color: $background-light;
	padding: 20px;
	overflow-x: auto;
	-webkit-overflow-scrolling: touch;

	code {
		padding: 0;
	}
}

code, kbd, samp, tt {
	background-color: $background-light;
	font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
	padding: 4px;
	font-size: 90%;
}

abbr, acronym {
	border-bottom: 1px dotted lighten($font-color, 30%);
	cursor: help;
}

cite {
	font-style: italic;
}

dfn {
	border-bottom: 1px dotted lighten($font-color, 30%);
}

em {
	font-style: italic;
	color: darken($font-color, 10%);
}

i {
	font-style: italic;
}

small {
	font-size: 80%;
	line-height: 12px;
}

ins {
	text-decoration: none;
	border-bottom: 1px solid lighten($font-color, 30%);
}

strong {
	font-weight: 400;
}

sup {
	vertical-align: super;
	font-size: 75%;
}

sub {
	vertical-align: sub;
	font-size: 75%;
}

u {
	text-decoration: none;
	border-bottom: 1px solid lighten($font-color, 30%);
}

a {
	text-decoration: none;
	border-bottom: 1px solid;
	color: $link-color;
	transition: color 160ms;
	
	/* https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/ */
	/* These are technically the same, but use both */
	overflow-wrap: break-word;
	word-wrap: break-word;
	-ms-word-break: break-all;
	/* This is the dangerous one in WebKit, as it breaks things wherever */
	word-break: break-all;
	/* Instead use this non-standard one: */
	word-break: break-word;
	/* Adds a hyphen where the word breaks, if supported (No Blink) */
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;

	&:hover {
		color: $link-color-hover;
	}
}

table {
	width: 100%;
	margin: 18px 0;

	tr {
		&:nth-child(even) {
			background: $background-light;
		}
	}

	th {
		padding: 8px 12px;
		font-weight: 400;
		text-align: center;
	}
	td {
		padding: 8px 12px;
		border-left: 5px solid darken($background-light, 5%);

		&:first-child {
			border-left: 0;
		}
	}
}

hr {
	border: 0;
	border-bottom: 1px solid lighten($font-color, 40%);
}
img {
	vertical-align: middle;
	max-width: 100%;

	&.image-aside {
		float: left;
		margin-right: 20px;
		margin-bottom: 10px;
	}
	&.image-aside-right {
		float: right;
		margin-left: 20px;
		margin-bottom: 10px;
	}
}

.text-left {
	text-align: left;
}
.text-center {
	text-align: center;
}
.text-right {
	text-align: right;
}

.sr-only {
	position: absolute;
	  width: 1px;
	  height: 1px;
	  padding: 0;
	  margin: -1px;
	  overflow: hidden;
	  clip: rect(0, 0, 0, 0);
	  border: 0;
}
